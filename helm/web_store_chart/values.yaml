# databases:
  alerter_db:
    name: alerter_db
    database: microservice1db
    username: postgres
    password: postgrespass
    service:
      name: alerter_db-service
      type: ClusterIP
      port: 5432
  backend_db:
    name: backend_db
    host: "backend_db"
    database: microservice2db
    username: postgres
    password: postgrespass
    service:
      name: backend_db-service
      type: ClusterIP
      port: 5432
  auth_db:
    name: auth_db
    host: "auth_db"
    database: tokens
    username: postgres
    password: postgrespass
    service:
      name: auth_db-service
      type: ClusterIP
      port: 5432

# redis-instances:
backend_redis:
  name: backend_redis
  host: "backend_redis"
  master:
    service:
      name: backend_redis-service
      type: ClusterIP
      port: 6379
      
auth_redis:
  name: auth_redis
  host: "auth_redis"
  database: microservice2db
  username: user2
  password: password2
  master:
    service:
      name: auth_redis-service
      type: ClusterIP
      port: 6379

rabbitmq:
  username: user1
  password: password1
  queue_name: "telegram_queue"
  service:
    name: rabbitmq-service
    type: ClusterIP
    port: 5672

s3_data:
  host: "your-host"
  port: "443"
  access_key: "your-access-key"
  secret_key: "your-secret-key"
  bucket_name: "items"

telegram_bot_token: "your-bot-token"

auth_secrets:
  secret_key: "your_secret_key"
  algorithm: "HS256"


apps_settings:
  auth:
    host: "web-store-auth"
    port: "11000"
    access_token_expire_minutes: "60"
  crypto:
    host: "web-store-crypto"
    port: "5000"
  backend:
    time_interval: "10"
    port: 8000