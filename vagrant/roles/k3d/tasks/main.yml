---
# tasks file for k3d

- name: Install required packages
  apt:
    name: "{{ docker_requirements }}"
    state: present
    update_cache: yes

- name: Create the apt keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  get_url:
    url: "{{ docker_gpg_url }}"
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  copy:
    content: |
      deb [arch={{ architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    dest: /etc/apt/sources.list.d/docker.list

- name: Install Docker packages
  apt:
    name: "{{ docker_packages }}"
    state: present
    update_cache: yes

- name: Download stable.txt
  get_url:
    url: {{ kubectl_stable_version_url }}
    dest: /tmp/stable.txt
    mode: '0644'

- name: Read the contents of stable.txt
  slurp:
    src: /tmp/stable.txt
  register: stable_txt_content

- name: Set stable version variable
  set_fact:
    stable_version: "{{ stable_txt_content.content | b64decode }}"

- name: Download kubectl
  get_url:
    url: "https://dl.k8s.io/release/{{ stable_version }}/bin/linux/amd64/kubectl"
    dest: /tmp/kubectl
    mode: '0755'

- name: Move kubectl to /usr/local/bin
  command: mv /tmp/kubectl /usr/local/bin/kubectl

- name: Download K3d install script
  get_url:
    url: "{{ k3d_install_script_url }}"
    dest: /opt/k3d_install.sh
    mode: '0755'

- name: Run K3d install script
  command: /bin/bash /opt/k3d_install.sh

- name: Creating K3d cluster
  command: k3d cluster create mycluster --port "80:80@loadbalancer"
