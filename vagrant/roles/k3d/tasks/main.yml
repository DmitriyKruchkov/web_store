---
# tasks file for k3d


- name: Update apt cache
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name: "{{ docker_requirements }}"
    state: present

- name: Create the apt keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  get_url:
    url: "{{ docker_gpg_url }}"
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
- name: debug
  debug:
    msg: "{{ architecture }}, {{ ansible_distribution_release }}"
- name: Add Docker repository
  copy:
    content: |
      deb [arch={{ architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    dest: /etc/apt/sources.list.d/docker.list
  notify: apt update


- name: Install Docker packages
  apt:
    name: "{{ docker_packages }}"
    state: present

- name: Ensure curl is installed
  apt:
    name: curl
    state: present

- name: Download the latest stable version of kubectl
  shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -LS https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  args:
    chdir: /tmp

- name: Make kubectl binary executable
  file:
    path: /tmp/kubectl
    mode: '0755'
    state: file

- name: Move kubectl to /usr/local/bin
  command: mv /tmp/kubectl /usr/local/bin/kubectl

- name: Download K3d install script
  get_url:
    url: "{{ k3d_install_script_url }}"
    dest: /opt/k3d/install.sh
    mode: '0755'

- name: Run K3d install script
  command: /bin/bash /opt/k3d/install.sh

- name: Creating K3d cluster
  command: k3d cluster create mycluster --port "80:80@loadbalancer"
