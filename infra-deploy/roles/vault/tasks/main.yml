- name: Creating vault user group
  group:
    name: "{{ vault_group }}"
  become: true

- name: Creating vault user
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "vault nologin User"
    createhome: "no"
    state: present

- name: "Ensure {{ vault_storage_path }} directory exists"
  file:
    path: "{{ vault_storage_path }}"
    state: directory
    owner: vault
    group: vault
    mode: '0700'

- name: Install prerequisites
  package:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ vault_install_prerequisites }}"
  become: yes

- name: Download binary
  get_url:
    url: https://hashicorp-releases.yandexcloud.net/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
    dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
  register: vault_download

- name: "Unzip vault archive"
  unarchive:
    src: "{{ vault_download.dest }}"
    dest: /usr/local/bin
    copy: no
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755

- name: "Set vault binary capabilities"
  capabilities:
    path: /usr/local/bin/vault
    capability: cap_ipc_lock+ep
    state: present

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
  notify: systemd_reload

- name: config file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"

- name: vault service
  service:
    name: vault
    state: started
    enabled: yes
  environment:
    VAULT_ADDR: "{{ vault_addr }}"

- name: Initialize Vault
  uri:
    url: "{{ vault_addr }}/v1/sys/init"
    method: PUT
    body: "{{ {'secret_shares': unseal_shares, 'secret_threshold': unseal_threshold} | to_json }}"
    headers:
      Content-Type: "application/json"
    status_code: 200
    return_content: yes
  register: init_result

- name: Set fact for unseal keys and root token
  set_fact:
    unseal_keys: "{{ init_result.json | json_query('keys') }}"
    root_token: "{{ init_result.json.root_token }}"

- name: Display Unseal Keys
  debug:
      msg: "Unseal Keys: {{ unseal_keys }}"

- name: Display Root Token
  debug:
    msg: "Root Token: {{ root_token }}"


# Задачи для разблокировки (unseal) Vault
- name: Unseal Vault with first key
  uri:
    url: "{{ vault_addr }}/v1/sys/unseal"
    method: PUT
    body: "{{ {'key': unseal_keys[0]} | to_json }}"
    headers:
      Content-Type: "application/json"
    status_code: 200

- name: Unseal Vault with second key
  uri:
    url: "{{ vault_addr }}/v1/sys/unseal"
    method: PUT
    body: "{{ {'key': unseal_keys[1]} | to_json }}"
    headers:
      Content-Type: "application/json"
    status_code: 200

- name: Unseal Vault with third key
  uri:
    url: "{{ vault_addr }}/v1/sys/unseal"
    method: PUT
    body: "{{ {'key': unseal_keys[2]} | to_json }}"
    headers:
      Content-Type: "application/json"
    status_code: 200
